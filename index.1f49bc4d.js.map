{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.grid = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    moveLeft() {\n        for(let row = 0; row < this.grid.length; row++){\n            let rowWithoutZero = this.grid[row].filter((item)=>item > 0);\n            for(let i = 0; i < rowWithoutZero.length - 1; i++)if (rowWithoutZero[i] === rowWithoutZero[i + 1]) {\n                rowWithoutZero[i] *= 2;\n                rowWithoutZero[i + 1] = 0;\n                this.score += rowWithoutZero[i];\n            }\n            rowWithoutZero = rowWithoutZero.filter((cell)=>cell !== 0);\n            while(rowWithoutZero.length < 4)rowWithoutZero.push(0);\n            this.grid[row] = rowWithoutZero;\n        }\n        this.updateDOM();\n        this.checkWin();\n        if (this.status === \"playing\") {\n            this.addStartCell();\n            this.checkLose();\n        }\n    }\n    moveRight() {\n        for(let row = 0; row < this.grid.length; row++){\n            let rowWithoutZero = this.grid[row].filter((item)=>item > 0);\n            for(let i = rowWithoutZero.length - 1; i > 0; i--)if (rowWithoutZero[i] === rowWithoutZero[i - 1]) {\n                rowWithoutZero[i] *= 2;\n                rowWithoutZero[i - 1] = 0;\n                this.score += rowWithoutZero[i];\n            }\n            rowWithoutZero = rowWithoutZero.filter((cell)=>cell !== 0);\n            while(rowWithoutZero.length < 4)rowWithoutZero.unshift(0);\n            this.grid[row] = rowWithoutZero;\n        }\n        this.updateDOM();\n        this.checkWin();\n        if (this.status === \"playing\") {\n            this.addStartCell();\n            this.checkLose();\n        }\n    }\n    moveUp() {\n        for(let col = 0; col < this.grid[0].length; col++){\n            let colWithoutZero = [];\n            for(let row = 0; row < this.grid.length; row++)if (this.grid[row][col] > 0) colWithoutZero.push(this.grid[row][col]);\n            for(let i = 0; i < colWithoutZero.length - 1; i++)if (colWithoutZero[i] === colWithoutZero[i + 1]) {\n                colWithoutZero[i] *= 2;\n                colWithoutZero[i + 1] = 0;\n                this.score += colWithoutZero[i];\n            }\n            colWithoutZero = colWithoutZero.filter((cell)=>cell !== 0);\n            while(colWithoutZero.length < 4)colWithoutZero.push(0);\n            for(let row = 0; row < this.grid.length; row++)this.grid[row][col] = colWithoutZero[row];\n        }\n        this.updateDOM();\n        this.checkWin();\n        if (this.status === \"playing\") {\n            this.addStartCell();\n            this.checkLose();\n        }\n    }\n    moveDown() {\n        for(let col = 0; col < this.grid.length; col++){\n            let colWithoutZero = [];\n            for(let row = 0; row < this.grid.length; row++)if (this.grid[row][col] > 0) colWithoutZero.push(this.grid[row][col]);\n            for(let i = colWithoutZero.length - 1; i > 0; i--)if (colWithoutZero[i] === colWithoutZero[i - 1]) {\n                colWithoutZero[i] *= 2;\n                colWithoutZero[i - 1] = 0;\n                this.score += colWithoutZero[i];\n            }\n            colWithoutZero = colWithoutZero.filter((cell)=>cell !== 0);\n            while(colWithoutZero.length < 4)colWithoutZero.unshift(0);\n            for(let row = 0; row < this.grid.length; row++)this.grid[row][col] = colWithoutZero[row] || 0;\n        }\n        this.updateDOM();\n        this.checkWin();\n        if (this.status === \"playing\") {\n            this.addStartCell();\n            this.checkLose();\n        }\n    }\n    checkWin() {\n        for(let row = 0; row < this.grid.length; row++){\n            for(let col = 0; col < this.grid[row].length; col++)if (this.grid[row][col] === 2048) {\n                this.status = \"win\";\n                return true;\n            }\n        }\n        this.status = \"playing\";\n        return false;\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.grid;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.grid = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"playing\";\n        this.updateDOM();\n        this.addStartCell();\n        this.addStartCell();\n    }\n    restart() {\n        const cells = document.querySelectorAll(\".field-cell\");\n        cells.forEach((cell)=>{\n            cell.innerHTML = \"\";\n            cell.className = \"field-cell\";\n        });\n        this.grid = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n        this.updateDOM();\n    }\n    addStartCell() {\n        const basicCells = Math.random() >= 0.9 ? 4 : 2;\n        const emptyCells = this.grid.flat().filter((cell)=>cell === 0);\n        if (emptyCells.length === 0) return;\n        let foundedEmpty = false;\n        while(!foundedEmpty)try {\n            const rowIndex = Math.floor(Math.random() * 4);\n            const cellIndex = Math.floor(Math.random() * 4);\n            if (this.grid[rowIndex] && this.grid[rowIndex][cellIndex] === 0) {\n                this.grid[rowIndex][cellIndex] = basicCells;\n                this.updateDOM();\n                foundedEmpty = true;\n            }\n        } catch (error) {\n            return;\n        }\n    }\n    updateDOM() {\n        const cells = document.querySelectorAll(\".field-cell\");\n        for(let row = 0; row < this.grid.length; row++)for(let col = 0; col < this.grid[row].length; col++){\n            const cell = cells[row * 4 + col];\n            const value = this.grid[row][col];\n            cell.className = \"field-cell\";\n            cell.innerHTML = \"\";\n            if (value > 0) {\n                cell.classList.add(`field-cell--${value}`);\n                cell.innerHTML = value;\n            }\n        }\n    }\n    checkLose() {\n        for(let row = 0; row < this.grid.length; row++){\n            for(let col = 0; col < this.grid[row].length; col++)if (this.grid[row][col] === 0) {\n                this.status = \"playing\";\n                return false;\n            }\n        }\n        for(let row = 0; row < this.grid.length; row++){\n            for(let col = 0; col < this.grid[row].length; col++)if (row > 0 && this.grid[row][col] === this.grid[row - 1][col] || row < this.grid.length - 1 && this.grid[row][col] === this.grid[row + 1][col] || col > 0 && this.grid[row][col] === this.grid[row][col - 1] || col < this.grid[row].length - 1 && this.grid[row][col] === this.grid[row][col + 1]) {\n                this.status = \"playing\";\n                return false;\n            }\n        }\n        this.status = \"lose\";\n        return true;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button.start\");\nconst $09e991522ca7e64e$var$gameMessage = document.querySelector(\".message.message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message.message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message.message-win\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\ndocument.addEventListener(\"keydown\", (e)=>{\n    if (e.key === \"ArrowLeft\") {\n        $09e991522ca7e64e$var$game.moveLeft();\n        $09e991522ca7e64e$var$score.innerText = $09e991522ca7e64e$var$game.score;\n    } else if (e.key === \"ArrowRight\") {\n        $09e991522ca7e64e$var$game.moveRight();\n        $09e991522ca7e64e$var$score.innerText = $09e991522ca7e64e$var$game.score;\n    } else if (e.key === \"ArrowUp\") {\n        $09e991522ca7e64e$var$game.moveUp();\n        $09e991522ca7e64e$var$score.innerText = $09e991522ca7e64e$var$game.score;\n    } else if (e.key === \"ArrowDown\") {\n        $09e991522ca7e64e$var$game.moveDown();\n        $09e991522ca7e64e$var$score.innerText = $09e991522ca7e64e$var$game.score;\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") {\n        $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$gameMessage.classList.add(\"hidden\");\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === \"win\") {\n        $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$gameMessage.classList.add(\"hidden\");\n    }\n});\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$startButton.classList.contains(\"restart\")) {\n        $09e991522ca7e64e$var$startButton.classList.replace(\"restart\", \"start\");\n        $09e991522ca7e64e$var$startButton.innerHTML = \"Start\";\n        $09e991522ca7e64e$var$gameMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$score.innerText = 0;\n        $09e991522ca7e64e$var$game.restart();\n    } else {\n        $09e991522ca7e64e$var$startButton.classList.replace(\"start\", \"restart\");\n        $09e991522ca7e64e$var$startButton.innerHTML = \"Restart\";\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$gameMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    }\n});\n\n\n//# sourceMappingURL=index.1f49bc4d.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst startButton = document.querySelector('.button.start');\nconst gameMessage = document.querySelector('.message.message-start');\nconst loseMessage = document.querySelector('.message.message-lose');\nconst winMessage = document.querySelector('.message.message-win');\nconst score = document.querySelector('.game-score');\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n    score.innerText = game.score;\n  } else if (e.key === 'ArrowRight') {\n    game.moveRight();\n    score.innerText = game.score;\n  } else if (e.key === 'ArrowUp') {\n    game.moveUp();\n    score.innerText = game.score;\n  } else if (e.key === 'ArrowDown') {\n    game.moveDown();\n    score.innerText = game.score;\n  }\n\n  if (game.getStatus() === 'lose') {\n    loseMessage.classList.remove('hidden');\n    gameMessage.classList.add('hidden');\n  }\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n    gameMessage.classList.add('hidden');\n  }\n});\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('restart')) {\n    startButton.classList.replace('restart', 'start');\n    startButton.innerHTML = 'Start';\n    gameMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n    score.innerText = 0;\n\n    game.restart();\n  } else {\n    startButton.classList.replace('start', 'restart');\n    startButton.innerHTML = 'Restart';\n    game.start();\n    gameMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.grid = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    for (let row = 0; row < this.grid.length; row++) {\n      let rowWithoutZero = this.grid[row].filter((item) => item > 0);\n\n      for (let i = 0; i < rowWithoutZero.length - 1; i++) {\n        if (rowWithoutZero[i] === rowWithoutZero[i + 1]) {\n          rowWithoutZero[i] *= 2;\n          rowWithoutZero[i + 1] = 0;\n          this.score += rowWithoutZero[i];\n        }\n      }\n\n      rowWithoutZero = rowWithoutZero.filter((cell) => cell !== 0);\n\n      while (rowWithoutZero.length < 4) {\n        rowWithoutZero.push(0);\n      }\n\n      this.grid[row] = rowWithoutZero;\n    }\n\n    this.updateDOM();\n    this.checkWin();\n\n    if (this.status === 'playing') {\n      this.addStartCell();\n      this.checkLose();\n    }\n  }\n\n  moveRight() {\n    for (let row = 0; row < this.grid.length; row++) {\n      let rowWithoutZero = this.grid[row].filter((item) => item > 0);\n\n      for (let i = rowWithoutZero.length - 1; i > 0; i--) {\n        if (rowWithoutZero[i] === rowWithoutZero[i - 1]) {\n          rowWithoutZero[i] *= 2;\n          rowWithoutZero[i - 1] = 0;\n          this.score += rowWithoutZero[i];\n        }\n      }\n\n      rowWithoutZero = rowWithoutZero.filter((cell) => cell !== 0);\n\n      while (rowWithoutZero.length < 4) {\n        rowWithoutZero.unshift(0);\n      }\n\n      this.grid[row] = rowWithoutZero;\n    }\n\n    this.updateDOM();\n    this.checkWin();\n\n    if (this.status === 'playing') {\n      this.addStartCell();\n      this.checkLose();\n    }\n  }\n\n  moveUp() {\n    for (let col = 0; col < this.grid[0].length; col++) {\n      let colWithoutZero = [];\n\n      for (let row = 0; row < this.grid.length; row++) {\n        if (this.grid[row][col] > 0) {\n          colWithoutZero.push(this.grid[row][col]);\n        }\n      }\n\n      for (let i = 0; i < colWithoutZero.length - 1; i++) {\n        if (colWithoutZero[i] === colWithoutZero[i + 1]) {\n          colWithoutZero[i] *= 2;\n          colWithoutZero[i + 1] = 0;\n          this.score += colWithoutZero[i];\n        }\n      }\n\n      colWithoutZero = colWithoutZero.filter((cell) => cell !== 0);\n\n      while (colWithoutZero.length < 4) {\n        colWithoutZero.push(0);\n      }\n\n      for (let row = 0; row < this.grid.length; row++) {\n        this.grid[row][col] = colWithoutZero[row];\n      }\n    }\n\n    this.updateDOM();\n    this.checkWin();\n\n    if (this.status === 'playing') {\n      this.addStartCell();\n      this.checkLose();\n    }\n  }\n\n  moveDown() {\n    for (let col = 0; col < this.grid.length; col++) {\n      let colWithoutZero = [];\n\n      for (let row = 0; row < this.grid.length; row++) {\n        if (this.grid[row][col] > 0) {\n          colWithoutZero.push(this.grid[row][col]);\n        }\n      }\n\n      for (let i = colWithoutZero.length - 1; i > 0; i--) {\n        if (colWithoutZero[i] === colWithoutZero[i - 1]) {\n          colWithoutZero[i] *= 2;\n          colWithoutZero[i - 1] = 0;\n          this.score += colWithoutZero[i];\n        }\n      }\n\n      colWithoutZero = colWithoutZero.filter((cell) => cell !== 0);\n\n      while (colWithoutZero.length < 4) {\n        colWithoutZero.unshift(0);\n      }\n\n      for (let row = 0; row < this.grid.length; row++) {\n        this.grid[row][col] = colWithoutZero[row] || 0;\n      }\n    }\n\n    this.updateDOM();\n    this.checkWin();\n\n    if (this.status === 'playing') {\n      this.addStartCell();\n      this.checkLose();\n    }\n  }\n\n  checkWin() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        if (this.grid[row][col] === 2048) {\n          this.status = 'win';\n\n          return true;\n        }\n      }\n    }\n\n    this.status = 'playing';\n\n    return false;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.grid;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.grid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'playing';\n    this.updateDOM();\n\n    this.addStartCell();\n    this.addStartCell();\n  }\n\n  restart() {\n    const cells = document.querySelectorAll('.field-cell');\n\n    cells.forEach((cell) => {\n      cell.innerHTML = '';\n      cell.className = 'field-cell';\n    });\n\n    this.grid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n    this.updateDOM();\n  }\n\n  addStartCell() {\n    const basicCells = Math.random() >= 0.9 ? 4 : 2;\n    const emptyCells = this.grid.flat().filter((cell) => cell === 0);\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    let foundedEmpty = false;\n\n    while (!foundedEmpty) {\n      try {\n        const rowIndex = Math.floor(Math.random() * 4);\n        const cellIndex = Math.floor(Math.random() * 4);\n\n        if (this.grid[rowIndex] && this.grid[rowIndex][cellIndex] === 0) {\n          this.grid[rowIndex][cellIndex] = basicCells;\n          this.updateDOM();\n          foundedEmpty = true;\n        }\n      } catch (error) {\n        return;\n      }\n    }\n  }\n\n  updateDOM() {\n    const cells = document.querySelectorAll('.field-cell');\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const cell = cells[row * 4 + col];\n        const value = this.grid[row][col];\n\n        cell.className = 'field-cell';\n        cell.innerHTML = '';\n\n        if (value > 0) {\n          cell.classList.add(`field-cell--${value}`);\n          cell.innerHTML = value;\n        }\n      }\n    }\n  }\n\n  checkLose() {\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        if (this.grid[row][col] === 0) {\n          this.status = 'playing';\n\n          return false;\n        }\n      }\n    }\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        if (\n          (row > 0 && this.grid[row][col] === this.grid[row - 1][col]) ||\n          (row < this.grid.length - 1 &&\n            this.grid[row][col] === this.grid[row + 1][col]) ||\n          (col > 0 && this.grid[row][col] === this.grid[row][col - 1]) ||\n          (col < this.grid[row].length - 1 &&\n            this.grid[row][col] === this.grid[row][col + 1])\n        ) {\n          this.status = 'playing';\n\n          return false;\n        }\n      }\n    }\n\n    this.status = 'lose';\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","grid","score","status","moveLeft","row","length","rowWithoutZero","filter","item","i","cell","push","updateDOM","checkWin","addStartCell","checkLose","moveRight","unshift","moveUp","col","colWithoutZero","moveDown","getScore","getState","getStatus","start","restart","cells","document","querySelectorAll","forEach","innerHTML","className","basicCells","Math","random","emptyCells","flat","foundedEmpty","rowIndex","floor","cellIndex","error","value","classList","add","$09e991522ca7e64e$var$startButton","querySelector","$09e991522ca7e64e$var$gameMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$score","addEventListener","e","key","innerText","remove","contains","replace"],"version":3,"file":"index.1f49bc4d.js.map"}